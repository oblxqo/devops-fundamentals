stages:
  - dependencies
  - test
  - build
  - deploy

install_dependencies:
  image: node:16-alpine
  stage: dependencies
  script:
    - npm ci
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules

unit_test:
  image: node:16-alpine
  stage: test
  script:
    - export PATH=$PATH:./node_modules/.bin
    - ng test --code-coverage --progress false --watch false
  artifacts:
    paths:
      - coverage/
  parallel: 2
  allow_failure: true
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

eslint_check:
  image: node:16-alpine
  stage: test
  script:
    - export PATH=$PATH:./node_modules/.bin
    - ng lint
  parallel: 2
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

npm_audit:
  image: node:16-alpine
  stage: test
  script:
    - npm audit
  parallel: 2
  allow_failure: true
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

docker_build:
  image: node:16-alpine
  stage: build
  script:
    - export PATH=$PATH:./node_modules/.bin
    - ng build
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

deploy:
  stage: deploy
  script: echo "Deploying the app"
  only:
    - main
    - develop
